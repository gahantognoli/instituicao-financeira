// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PontoSys.InstituicaoFinanceira.Dados.Contexto;

namespace PontoSys.InstituicaoFinanceira.Dados.Migrations
{
    [DbContext(typeof(InstituicaoFinanceiraContexto))]
    [Migration("20191224154741_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PontoSys.InstituicaoFinanceira.Dominio.Entidades.Cliente", b =>
                {
                    b.Property<Guid>("ClienteId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataNascimento");

                    b.Property<bool>("Deletado");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("Sexo");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Cliente");
                });

            modelBuilder.Entity("PontoSys.InstituicaoFinanceira.Dominio.Entidades.Conta", b =>
                {
                    b.Property<Guid>("ContaId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ClienteId");

                    b.Property<DateTime>("DataAbertura");

                    b.Property<DateTime>("DataEncerramento");

                    b.Property<string>("NumeroConta")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<decimal>("Saldo");

                    b.Property<int>("Senha")
                        .HasMaxLength(8);

                    b.Property<int>("Situacao");

                    b.HasKey("ContaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("NumeroConta")
                        .IsUnique();

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("PontoSys.InstituicaoFinanceira.Dominio.Entidades.PessoaFisica", b =>
                {
                    b.HasBaseType("PontoSys.InstituicaoFinanceira.Dominio.Entidades.Cliente");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.HasDiscriminator().HasValue("PessoaFisica");
                });

            modelBuilder.Entity("PontoSys.InstituicaoFinanceira.Dominio.Entidades.PessoaJuridica", b =>
                {
                    b.HasBaseType("PontoSys.InstituicaoFinanceira.Dominio.Entidades.Cliente");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(14);

                    b.HasDiscriminator().HasValue("PessoaJuridica");
                });

            modelBuilder.Entity("PontoSys.InstituicaoFinanceira.Dominio.Entidades.Conta", b =>
                {
                    b.HasOne("PontoSys.InstituicaoFinanceira.Dominio.Entidades.Cliente", "Cliente")
                        .WithMany("Contas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
